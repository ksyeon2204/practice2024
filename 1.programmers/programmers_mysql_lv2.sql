-- 2024.05.02 (목)
--1. 부모의 형질을 모두 가지는 대장균 찾기
-- HINT : 비트연산자로 풀기 
-- 비트연산이란 : 비트 단위로 데이터를 조작, AND(&), OR(|), XOR(^), NOT(~)등이 있음.
-- HINT2 : 십진수 데이터를  이진수 변환할 때  BIN() 사용.

SELECT 
       A.ID
       ,A.GENOTYPE
       ,B.GENOTYPE AS PARENT_GENOTYPE
  FROM ECOLI_DATA A
 INNER JOIN ECOLI_DATA B
    ON A.PARENT_ID = B.ID
 WHERE A.GENOTYPE & B.GENOTYPE = B.GENOTYPE
 ORDER BY A.ID;
 
-- 2.분기별 분화된 대장균의 개체 수 구하기
SELECT CONCAT(QUARTER(DATE_FORMAT(DIFFERENTIATION_DATE, '%Y-%m-%d')), 'Q')  AS QUARTER
       ,COUNT(*) AS ECOLI_COUNT
  FROM ECOLI_DATA
 GROUP BY QUARTER
 ORDER BY QUARTER
 
-- 3. 특정 물고기를 잡은 총 수 구하기
SELECT COUNT(A.FISH_TYPE) AS FISH_COUNT
  FROM FISH_INFO A
 INNER JOIN FISH_NAME_INFO B
    ON A.FISH_TYPE = B.FISH_TYPE
 WHERE B.FISH_NAME IN ('BASS','SNAPPER') ;

-- 4. 월별 잡은 물고기 수 구하기
SELECT COUNT(*) AS FISH_COUNT
       ,MONTH(TIME) AS MONTH
  FROM FISH_INFO
 GROUP BY MONTH
 ORDER BY MONTH;
 
-- 5. 물고기 종류 별 잡은 수 구하기
SELECT COUNT(B.FISH_NAME) AS FISH_COUNT
       ,FISH_NAME
  FROM FISH_INFO A
 INNER JOIN FISH_NAME_INFO B
    ON A.FISH_TYPE = B.FISH_TYPE
 GROUP BY B.FISH_NAME
 ORDER BY FISH_COUNT DESC;
 
-- 6. 노선별 평균 역 사이 거리 조회하기
-- 누적거리에 km붙어있어서 ORDER BY 순서가 제대로 계산안됨.
 SELECT ROUTE
       ,CONCAT(ROUND(SUM(D_BETWEEN_DIST),1), 'km') AS TOTAL_DISTANCE
       ,CONCAT(ROUND(AVG(D_BETWEEN_DIST),2), 'km') AS AVERAGE_DISTANCE
  FROM SUBWAY_DISTANCE
 GROUP BY ROUTE
 ORDER BY SUM(D_BETWEEN_DIST) DESC;
 
-- 7.연도 별 평균 미세먼지 농도 조회하기
SELECT YEAR(YM) AS YEAR
       ,ROUND(AVG(PM_VAL1),2) AS 'PM10'
       ,ROUND(AVG(PM_VAL2),2) AS 'PM2.5'
  FROM AIR_POLLUTION
 WHERE LOCATION2 = '수원'
 GROUP BY YEAR(YM)
 ORDER BY YEAR(YM);
 
-- 8.조건에 맞는 사원 정보 조회하기
SELECT SUM(G.SCORE) AS SCORE
       ,MAX(D.EMP_NO) AS EMP_NO
       ,MAX(D.EMP_NAME) AS EMP_NAME
       ,MAX(D.POSITION) AS POSITION
       ,MAX(D.EMAIL) AS EMAIL
  FROM HR_EMPLOYEES D
  LEFT OUTER JOIN HR_GRADE G
    ON D.EMP_NO = G.EMP_NO
 WHERE G.YEAR = '2022'   
 GROUP BY G.YEAR, G.EMP_NO
 ORDER BY SUM(G.SCORE) DESC
 LIMIT 1;
 
 -- 2024.05.03 (금)
 -- 9.조건에 맞는 개발자 찾기
 -- TIP : WHERE로 IN으로 조회 시 'Python'과 'C#'을 둘 다 포함한 경우 2번 조회됨. 따라서 id별로 1개씩 조회되도록 DISTINCT를 걸어줘야 함.
 SELECT DISTINCT D.ID
       ,D.EMAIL
       ,D.FIRST_NAME
       ,D.LAST_NAME
  FROM DEVELOPERS D
  LEFT OUTER JOIN SKILLCODES S
    ON D.SKILL_CODE & S.CODE = S.CODE 
  WHERE S.NAME IN ('Python','C#')
 ORDER BY D.ID;
 
-- 10.업그레이드 된 아이템 구하기
SELECT  II2.ITEM_ID
       ,II2.ITEM_NAME
       ,II2.RARITY
  FROM ITEM_INFO II
 INNER JOIN ITEM_TREE IT
    ON II.ITEM_ID = IT.PARENT_ITEM_ID
 INNER JOIN ITEM_INFO II2
    ON II2.ITEM_ID = IT.ITEM_ID
 WHERE II.RARITY = 'RARE' 
 ORDER BY II2.ITEM_ID DESC;
 
-- 11. ROOT 아이템 구하기
SELECT II.ITEM_ID
       ,II.ITEM_NAME
  FROM ITEM_INFO II
 INNER JOIN ITEM_TREE IT
    ON II.ITEM_ID = IT.ITEM_ID
 WHERE IT.PARENT_ITEM_ID IS NULL
 ORDER BY II.ITEM_ID ;
 
-- 12. 조건에 맞는 아이템들의 가격의 총합 구하기
SELECT SUM(PRICE) AS TOTAL_PRICE
  FROM ITEM_INFO 
 WHERE RARITY = 'LEGEND';
 
--13. 조건에 부합하는 중고거래 상태 조회하기
 SELECT BOARD_ID
       ,WRITER_ID
       ,TITLE
       ,PRICE
       ,CASE WHEN STATUS = 'SALE' THEN '판매중'
             WHEN STATUS = 'RESERVED' THEN '예약중'
             WHEN STATUS = 'DONE' THEN '거래완료'
             ELSE STATUS END AS STATUS
  FROM USED_GOODS_BOARD
 WHERE CREATED_DATE = '2022-10-05'
 ORDER BY BOARD_ID DESC;
 
-- 14. 자동차 평균 대여 기간 구하기
SELECT CAR_ID
       ,ROUND(AVG(DATEDIFF(END_DATE, START_DATE)+1),1) AS AVERAGE_DURATION
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
 GROUP BY CAR_ID
HAVING AVG(DATEDIFF(END_DATE, START_DATE)+1) >= 7 
 ORDER BY AVERAGE_DURATION DESC, CAR_ID DESC;

-- 15.자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE
       ,COUNT(CAR_TYPE)
  FROM CAR_RENTAL_COMPANY_CAR
 WHERE OPTIONS LIKE '%통풍시트%'
    OR OPTIONS LIKE '%열선시트%'
    OR OPTIONS LIKE '%가죽시트%'
 GROUP BY CAR_TYPE
 ORDER BY CAR_TYPE;
 
-- 16. 조건에 맞는 도서와 저자 리스트 출력하기
SELECT B.BOOK_ID
       ,A.AUTHOR_NAME
       ,DATE_FORMAT(B.PUBLISHED_DATE, '%Y-%m-%d') AS PUBLISHED_DATE
  FROM BOOK B
 INNER JOIN AUTHOR A
    ON B.AUTHOR_ID = A.AUTHOR_ID 
 WHERE B.CATEGORY = '경제'
 ORDER BY B.PUBLISHED_DATE ;
 
-- 17. 성분으로 구분한 아이스크림 총 주문량
SELECT I.INGREDIENT_TYPE
       ,SUM(F.TOTAL_ORDER) AS TOTAL_ORDER
  FROM FIRST_HALF F
 INNER JOIN ICECREAM_INFO I
    ON F.FLAVOR = I.FLAVOR
 GROUP BY I.INGREDIENT_TYPE
 ORDER BY TOTAL_ORDER;
 
-- 18.진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD AS '진료과코드'
       ,COUNT(MCDP_CD) AS '5월예약건수'
  FROM APPOINTMENT
 WHERE APNT_YMD LIKE '2022-05%'
 GROUP BY MCDP_CD
 ORDER BY COUNT(MCDP_CD), MCDP_CD;
 
-- 19. 재구매가 일어난 상품과 회원 리스트 구하기
SELECT USER_ID
      ,PRODUCT_ID
  FROM ONLINE_SALE
 GROUP BY USER_ID, PRODUCT_ID
HAVING COUNT(USER_ID) >= 2
 ORDER BY USER_ID, PRODUCT_ID DESC;
 
-- 20. 상품 별 오프라인 매출 구하기
SELECT P.PRODUCT_CODE
       ,SUM(O.SALES_AMOUNT * P.PRICE) AS SALES
  FROM PRODUCT P
 INNER JOIN OFFLINE_SALE O
    ON P.PRODUCT_ID = O.PRODUCT_ID
 GROUP BY P.PRODUCT_CODE
 ORDER BY SALES DESC, P.PRODUCT_CODE;

-- 21. 가격대 별 상품 개수 구하기
SELECT FLOOR(PRICE / 10000) * 10000 AS PRICE_GROUP
       ,COUNT(PRICE) AS PRODUCTS
  FROM PRODUCT
 GROUP BY PRICE_GROUP
 ORDER BY PRICE_GROUP;
 
-- 22. 카테고리 별 상품 개수 구하기
SELECT SUBSTRING(PRODUCT_CODE,1,2) AS CATEGORY
       ,COUNT(PRODUCT_CODE) AS PRODUCTS
  FROM PRODUCT
 GROUP BY CATEGORY
 ORDER BY CATEGORY; 

-- 2024.05.13 (월)
--23. 3월에 태어난 여성 회원 목록 출력하기
SELECT MEMBER_ID
       ,MEMBER_NAME
       ,GENDER
       ,DATE_FORMAT(DATE_OF_BIRTH, '%Y-%m-%d') AS DATE_OF_BIRTH
  FROM MEMBER_PROFILE
 WHERE MONTH(DATE_OF_BIRTH) = '3'
   AND GENDER = 'W'
   AND TLNO IS NOT NULL
 ORDER BY MEMBER_ID ASC;

-- 24.가격이 제일 비싼 식품의 정보 출력하기
SELECT PRODUCT_ID
       ,PRODUCT_NAME
       ,PRODUCT_CD
       ,CATEGORY
       ,PRICE
  FROM FOOD_PRODUCT
 ORDER BY PRICE DESC
 LIMIT 1;
 
 -- 25. DATETIME에서 DATE로 형 변환
 SELECT ANIMAL_ID
       ,NAME
       ,DATE_FORMAT(DATETIME, '%Y-%m-%d') AS DATETIME
  FROM ANIMAL_INS
 ORDER BY ANIMAL_ID ;
 
-- 26.입양 시각 구하기(1)
SELECT HOUR(DATETIME) AS HOUR
       ,COUNT(*) AS COUNT
  FROM ANIMAL_OUTS  
 GROUP BY HOUR(DATETIME)
HAVING  HOUR >= 9 AND HOUR < 20
 ORDER BY HOUR(DATETIME) ;
 
-- 27. NULL 처리하기
SELECT ANIMAL_TYPE
       ,IFNULL(NAME,'No name')
       ,SEX_UPON_INTAKE
  FROM ANIMAL_INS
 ORDER BY ANIMAL_ID;
 
-- 2024.05.14 (화) 
-- 28.중성화 여부 파악하기
SELECT ANIMAL_ID
       ,NAME
       ,CASE WHEN SEX_UPON_INTAKE LIKE 'Neutered%' OR SEX_UPON_INTAKE LIKE 'Spayed%' THEN 'O'
             ELSE 'X'
         END AS '중성화'    
  FROM ANIMAL_INS;
 
-- 29. 중복 제거하기
SELECT COUNT(DISTINCT NAME) AS COUNT
  FROM ANIMAL_INS
 WHERE NAME IS NOT NULL ;
 
-- 30. 동물 수 구하기
SELECT COUNT(*) AS COUNT
  FROM ANIMAL_INS; 
 
-- 31.이름에 el이 들어가는 동물 찾기
SELECT ANIMAL_ID
       ,NAME
  FROM ANIMAL_INS
 WHERE NAME LIKE '%EL%'
   AND ANIMAL_TYPE = 'Dog'
 ORDER BY NAME;

-- 32. 루시와 엘라 찾기
SELECT ANIMAL_ID
       ,NAME
       ,SEX_UPON_INTAKE
  FROM ANIMAL_INS
 WHERE NAME IN ('Lucy','Ella','Pickle','Rogan','Sabrina','Mitty') ;
 
-- 33.동명 동물 수 찾기
SELECT NAME
       ,COUNT(NAME) AS COUNT
  FROM ANIMAL_INS
 GROUP BY NAME
HAVING COUNT(NAME) >= 2
 ORDER BY NAME;
 
-- 34. 고양이와 개는 몇 마리 있을까
 SELECT ANIMAL_TYPE
       ,COUNT(ANIMAL_TYPE) AS count
  FROM ANIMAL_INS
 GROUP BY ANIMAL_TYPE
 HAVING ANIMAL_TYPE IN ('Cat', 'Dog')
 ORDER BY CASE WHEN ANIMAL_TYPE = 'Cat' THEN  0 ELSE 1 END;

-- 35. 최솟값 구하기
SELECT DATETIME AS  '시간'
  FROM ANIMAL_INS
 ORDER BY DATETIME
 LIMIT 1; 
 
 








